# Sample workflow for building and deploying a VitePress site to GitHub Pages
#
name: Build and Deploy to Pages

on:
  push:
    tags:        
      - '*'  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      SALT: ${{ secrets.SALT }}
      PASSKEY: ${{ secrets.PASSKEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: yarn # or pnpm / yarn
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Install dependencies
        run: yarn install # or pnpm install / yarn install / bun install
      - name: Config Secret # decript .env files.
        run: |
          echo -e "${SALT}\n${PASSKEY}\ny" | sh config-secret
      - name: print secret
        run: |
          cat .env.production
      - name: Translation # build translation json.
        run: |
          yarn run i18n-compile
      - name: Build #build app.
        run: |
          yarn run build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: './dist'
      - name: stop
        run: |
          sh stop

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
